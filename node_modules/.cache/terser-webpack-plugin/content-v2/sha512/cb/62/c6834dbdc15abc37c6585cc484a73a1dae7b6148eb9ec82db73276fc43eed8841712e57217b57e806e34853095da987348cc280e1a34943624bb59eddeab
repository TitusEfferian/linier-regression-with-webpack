{"code":"!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t){const n=()=>{const e=tf.sequential();return e.add(tf.layers.dense({inputShape:[1],units:1,useBias:!0})),e.add(tf.layers.dense({units:1,useBias:!0})),e},r=e=>tf.tidy(()=>{tf.util.shuffle(e);const t=e.map(e=>e.horsepower),n=e.map(e=>e.mpg),r=tf.tensor2d(t,[t.length,1]),a=tf.tensor2d(n,[n.length,1]),o=r.max(),s=r.min(),i=a.max(),l=a.min();return{inputs:r.sub(s).div(o.sub(s)),labels:a.sub(l).div(i.sub(l)),inputMax:o,inputMin:s,labelMax:i,labelMin:l}}),a=async(e,t,n)=>{e.compile({optimizer:tf.train.adam(),loss:tf.losses.meanSquaredError,metrics:[\"mse\"]});return await e.fit(t,n,{batchSize:28,epochs:100,shuffle:!0,callbacks:tfvis.show.fitCallbacks({name:\"Training Performance\"},[\"loss\",\"mse\"],{height:200,callbacks:[\"onEpochEnd\"]})})},o=(e,t,n)=>{const{inputMax:r,inputMin:a,labelMin:o,labelMax:s}=n,[i,l]=tf.tidy(()=>{const t=tf.linspace(0,1,100),n=e.predict(t.reshape([100,1])),i=t.mul(r.sub(a)).add(a),l=n.mul(s.sub(o)).add(o);return[i.dataSync(),l.dataSync()]}),u=Array.from(i).map((e,t)=>({x:e,y:l[t]})),c=t.map(e=>({x:e.horsepower,y:e.mpg}));tfvis.render.scatterplot({name:\"Model Predictions vs Original Data\"},{values:[c,u],series:[\"original\",\"predicted\"]},{xLabel:\"Horsepower\",yLabel:\"MPG\",height:300})};document.addEventListener(\"DOMContentLoaded\",async()=>{const e=await(async()=>{const e=await fetch(\"https://storage.googleapis.com/tfjs-tutorials/carsData.json\");return(await e.json()).map(e=>({mpg:e.Miles_per_Gallon,horsepower:e.Horsepower})).filter(e=>null!=e.mpg&&null!=e.horsepower)})(),t=e.map(e=>({x:e.horsepower,y:e.mpg}));tfvis.render.scatterplot({name:\"Horsepower v MPG\"},{values:t},{xLabel:\"Horsepower\",yLabel:\"MPG\",height:300});const s=n();tfvis.show.modelSummary({name:\"Model Summary\"},s);const i=r(e),{inputs:l,labels:u}=i;await a(s,l,u),o(s,e,i)})}]);","extractedComments":[]}